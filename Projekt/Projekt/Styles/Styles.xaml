<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Projekt">

    <Style x:Key="BaseButton"
           TargetType="{x:Type local:HoverButton}">

        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HoverColor" Value="#515151"/>
        <Setter Property="Background" Value="#232323"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HoverButton}">
                    <Border x:Name="Border"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource Self}, Path=HoverColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButton"
           BasedOn="{StaticResource BaseButton}"
           TargetType="{x:Type local:HoverButton}">

        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <Style x:Key="ExitButton"
           BasedOn="{StaticResource BaseButton}"
           TargetType="{x:Type local:HoverButton}">

        <Setter Property="HoverColor" Value="Red"/>
    </Style>

    <Style x:Key="SidePanelButton"
           TargetType="{x:Type ToggleButton}">

        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="#232323"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="0">

                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                            
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#515151"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>

    <Style x:Key="SidePanelMenuButton"
           TargetType="{x:Type ToggleButton}">

        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="#232323"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5">

                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#515151"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SidePanelToolTip"
           TargetType="{x:Type ToolTip}">

        <Setter Property="Placement" Value="Right"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="#232323"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="PlacementRectangle" Value="50 -5 0 00"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5">

                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>